package com.abc.copy.encoding;

/**
 * Created by ashok.agarwal on 9/14/15.
 */
public class DiffConvert {
    public static void main(String[] args) {
        double conversion, conversion_prev = 0;

        //2^-1047 + 2^-1075
        String decimal = "6.6312368714697582767853966302759672433990999" +
                "473553031442499717587362866301392654396180682007880487441059604205" +
                "526018528897150063763256665955396033303618005191075917832333584923" +
                "372080578494993608994251286407188566165030934449228547591599881603" +
                "044399098682919739314266256986631577498362522745234853124423586512" +
                "070512924530832781161439325697279187097860044978723221938561502254" +
                "152119972830784963194121246401117772161481107528151017752957198119" +
                "743384519360959074196224175384736794951486324803914359317679811223" +
                "967034438033355297560033532098300718322306892013830155987921841729" +
                "099279241763393155074022348361207309147831684007154624400538175927" +
                "027662135590421159867638194826541287705957668068727833491469671712" +
                "93949598850675682115696218943412532098591327667236328125E-316";

        for(int i = 1; i <= 1000000; i++) {
            conversion = Double.parseDouble(decimal);
            if (i != 1 && conversion != conversion_prev) {
                System.out.printf("Iteration %d converts as %a%n",
                        i-1,conversion_prev);
                System.out.printf("Iteration %d converts as %a%n",
                        i,conversion);
            }
            conversion_prev = conversion;
        }
    }
}
